// Mocks generated by Mockito 5.4.4 from annotations
// in notes_app/test/Pages/HomeScreen/HomeScreen-Test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:notes_app/BOs/NotesBO/NotesBO.dart' as _i5;
import 'package:notes_app/Helpers/ServiceHelper.dart' as _i2;
import 'package:notes_app/Services/PlatformServices/PlatformHiveLocalDbService/IPlatformHiveLocalDbService.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeServiceResult_0<T> extends _i1.SmartFake
    implements _i2.ServiceResult<T> {
  _FakeServiceResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IPlatformHiveLocalDbService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIPlatformHiveLocalDbService extends _i1.Mock
    implements _i3.IPlatformHiveLocalDbService {
  MockIPlatformHiveLocalDbService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ServiceResult<bool>> addNotes(
          {required _i5.NotesBO? notesBO}) =>
      (super.noSuchMethod(
        Invocation.method(
          #addNotes,
          [],
          {#notesBO: notesBO},
        ),
        returnValue: _i4.Future<_i2.ServiceResult<bool>>.value(
            _FakeServiceResult_0<bool>(
          this,
          Invocation.method(
            #addNotes,
            [],
            {#notesBO: notesBO},
          ),
        )),
      ) as _i4.Future<_i2.ServiceResult<bool>>);

  @override
  _i4.Future<_i2.ServiceResult<bool>> deleteNotes({required int? key}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteNotes,
          [],
          {#key: key},
        ),
        returnValue: _i4.Future<_i2.ServiceResult<bool>>.value(
            _FakeServiceResult_0<bool>(
          this,
          Invocation.method(
            #deleteNotes,
            [],
            {#key: key},
          ),
        )),
      ) as _i4.Future<_i2.ServiceResult<bool>>);

  @override
  _i4.Future<_i2.ServiceResult<bool>> updateNotes({
    required int? key,
    required _i5.NotesBO? notesBO,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateNotes,
          [],
          {
            #key: key,
            #notesBO: notesBO,
          },
        ),
        returnValue: _i4.Future<_i2.ServiceResult<bool>>.value(
            _FakeServiceResult_0<bool>(
          this,
          Invocation.method(
            #updateNotes,
            [],
            {
              #key: key,
              #notesBO: notesBO,
            },
          ),
        )),
      ) as _i4.Future<_i2.ServiceResult<bool>>);

  @override
  _i4.Future<_i2.ServiceResult<List<_i5.NotesBO>>> getAllNotes() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllNotes,
          [],
        ),
        returnValue: _i4.Future<_i2.ServiceResult<List<_i5.NotesBO>>>.value(
            _FakeServiceResult_0<List<_i5.NotesBO>>(
          this,
          Invocation.method(
            #getAllNotes,
            [],
          ),
        )),
      ) as _i4.Future<_i2.ServiceResult<List<_i5.NotesBO>>>);
}
